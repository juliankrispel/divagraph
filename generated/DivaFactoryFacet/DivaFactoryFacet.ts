// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LiquidityAdded extends ethereum.Event {
  get params(): LiquidityAdded__Params {
    return new LiquidityAdded__Params(this);
  }
}

export class LiquidityAdded__Params {
  _event: LiquidityAdded;

  constructor(event: LiquidityAdded) {
    this._event = event;
  }

  get optionSetId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LiquidityRemoved extends ethereum.Event {
  get params(): LiquidityRemoved__Params {
    return new LiquidityRemoved__Params(this);
  }
}

export class LiquidityRemoved__Params {
  _event: LiquidityRemoved;

  constructor(event: LiquidityRemoved) {
    this._event = event;
  }

  get optionSetId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OptionSetIssued extends ethereum.Event {
  get params(): OptionSetIssued__Params {
    return new OptionSetIssued__Params(this);
  }
}

export class OptionSetIssued__Params {
  _event: OptionSetIssued;

  constructor(event: OptionSetIssued) {
    this._event = event;
  }

  get optionSetId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get shortToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get longToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class DivaFactoryFacet__issueOptionSetInput_optionSetParamsStruct extends ethereum.Tuple {
  get inflection(): BigInt {
    return this[0].toBigInt();
  }

  get cap(): BigInt {
    return this[1].toBigInt();
  }

  get floor(): BigInt {
    return this[2].toBigInt();
  }

  get collateralBalanceShort(): BigInt {
    return this[3].toBigInt();
  }

  get collateralBalanceLong(): BigInt {
    return this[4].toBigInt();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get supplyShort(): BigInt {
    return this[6].toBigInt();
  }

  get supplyLong(): BigInt {
    return this[7].toBigInt();
  }

  get referenceAsset(): string {
    return this[8].toString();
  }

  get collateralToken(): Address {
    return this[9].toAddress();
  }

  get dataFeedProvider(): Address {
    return this[10].toAddress();
  }
}

export class DivaFactoryFacet extends ethereum.SmartContract {
  static bind(address: Address): DivaFactoryFacet {
    return new DivaFactoryFacet("DivaFactoryFacet", address);
  }

  addLiquidity(
    _optionSetId: BigInt,
    _supplyCollateralAmountIncr: BigInt
  ): boolean {
    let result = super.call(
      "addLiquidity",
      "addLiquidity(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_optionSetId),
        ethereum.Value.fromUnsignedBigInt(_supplyCollateralAmountIncr)
      ]
    );

    return result[0].toBoolean();
  }

  try_addLiquidity(
    _optionSetId: BigInt,
    _supplyCollateralAmountIncr: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "addLiquidity",
      "addLiquidity(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_optionSetId),
        ethereum.Value.fromUnsignedBigInt(_supplyCollateralAmountIncr)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  issueOptionSet(
    _optionSetParams: DivaFactoryFacet__issueOptionSetInput_optionSetParamsStruct
  ): boolean {
    let result = super.call(
      "issueOptionSet",
      "issueOptionSet((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,address,address)):(bool)",
      [ethereum.Value.fromTuple(_optionSetParams)]
    );

    return result[0].toBoolean();
  }

  try_issueOptionSet(
    _optionSetParams: DivaFactoryFacet__issueOptionSetInput_optionSetParamsStruct
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "issueOptionSet",
      "issueOptionSet((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,address,address)):(bool)",
      [ethereum.Value.fromTuple(_optionSetParams)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  removeLiquidity(_optionSetId: BigInt, _amountLongTokens: BigInt): boolean {
    let result = super.call(
      "removeLiquidity",
      "removeLiquidity(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_optionSetId),
        ethereum.Value.fromUnsignedBigInt(_amountLongTokens)
      ]
    );

    return result[0].toBoolean();
  }

  try_removeLiquidity(
    _optionSetId: BigInt,
    _amountLongTokens: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "removeLiquidity",
      "removeLiquidity(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_optionSetId),
        ethereum.Value.fromUnsignedBigInt(_amountLongTokens)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddLiquidityCall extends ethereum.Call {
  get inputs(): AddLiquidityCall__Inputs {
    return new AddLiquidityCall__Inputs(this);
  }

  get outputs(): AddLiquidityCall__Outputs {
    return new AddLiquidityCall__Outputs(this);
  }
}

export class AddLiquidityCall__Inputs {
  _call: AddLiquidityCall;

  constructor(call: AddLiquidityCall) {
    this._call = call;
  }

  get _optionSetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _supplyCollateralAmountIncr(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddLiquidityCall__Outputs {
  _call: AddLiquidityCall;

  constructor(call: AddLiquidityCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class IssueOptionSetCall extends ethereum.Call {
  get inputs(): IssueOptionSetCall__Inputs {
    return new IssueOptionSetCall__Inputs(this);
  }

  get outputs(): IssueOptionSetCall__Outputs {
    return new IssueOptionSetCall__Outputs(this);
  }
}

export class IssueOptionSetCall__Inputs {
  _call: IssueOptionSetCall;

  constructor(call: IssueOptionSetCall) {
    this._call = call;
  }

  get _optionSetParams(): IssueOptionSetCall_optionSetParamsStruct {
    return changetype<IssueOptionSetCall_optionSetParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class IssueOptionSetCall__Outputs {
  _call: IssueOptionSetCall;

  constructor(call: IssueOptionSetCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class IssueOptionSetCall_optionSetParamsStruct extends ethereum.Tuple {
  get inflection(): BigInt {
    return this[0].toBigInt();
  }

  get cap(): BigInt {
    return this[1].toBigInt();
  }

  get floor(): BigInt {
    return this[2].toBigInt();
  }

  get collateralBalanceShort(): BigInt {
    return this[3].toBigInt();
  }

  get collateralBalanceLong(): BigInt {
    return this[4].toBigInt();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get supplyShort(): BigInt {
    return this[6].toBigInt();
  }

  get supplyLong(): BigInt {
    return this[7].toBigInt();
  }

  get referenceAsset(): string {
    return this[8].toString();
  }

  get collateralToken(): Address {
    return this[9].toAddress();
  }

  get dataFeedProvider(): Address {
    return this[10].toAddress();
  }
}

export class RemoveLiquidityCall extends ethereum.Call {
  get inputs(): RemoveLiquidityCall__Inputs {
    return new RemoveLiquidityCall__Inputs(this);
  }

  get outputs(): RemoveLiquidityCall__Outputs {
    return new RemoveLiquidityCall__Outputs(this);
  }
}

export class RemoveLiquidityCall__Inputs {
  _call: RemoveLiquidityCall;

  constructor(call: RemoveLiquidityCall) {
    this._call = call;
  }

  get _optionSetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amountLongTokens(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveLiquidityCall__Outputs {
  _call: RemoveLiquidityCall;

  constructor(call: RemoveLiquidityCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
